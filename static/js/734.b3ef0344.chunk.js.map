{"version":3,"file":"static/js/734.b3ef0344.chunk.js","mappings":"4UAgBaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAcC,EAAAA,EAAAA,KAAdD,UAoBR,OACE,gCACGA,IAAa,wCACd,SAAC,IAAD,CAAME,GAAG,WAAWC,MAAM,SAASC,QAAQ,SAA3C,UACE,SAAC,KAAD,CAAKF,GAAG,QAAQG,EAAG,EAAGC,QAAS,EAAGC,EAAE,OAApC,UACE,SAAC,KAAD,CAAQC,cAVM,CACpBC,MAAO,GACPC,SAAU,IAQkCC,SAvBzB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9Bf,GACEgB,EAAAA,EAAAA,IAAM,CACJL,MAAOG,EAAOH,MACdC,SAAUE,EAAOF,YAGlBK,SACAC,MAAK,kBAAMC,EAAAA,OAAAA,QAAe,yFAArB,IACLC,OAAM,kBAAMD,EAAAA,OAAAA,QAAe,6HAArB,IACTJ,GACD,EAYO,SACG,gBAAGM,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,QAAzB,OACC,iBAAMV,SAAUQ,EAAhB,UACE,UAAC,IAAD,CAAQG,QAAS,EAAGnB,MAAM,aAA1B,WACE,UAAC,KAAD,YACE,SAAC,IAAD,CAAWoB,QAAQ,QAAnB,4BACA,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJC,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,QAAQ,eAGZ,UAAC,KAAD,CACEC,YAAaV,EAAOV,UAAYW,EAAQX,SAD1C,WAGE,SAAC,IAAD,CAAWa,QAAQ,WAAnB,uBACA,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJC,GAAG,WACHC,KAAK,WACLC,KAAK,WACLC,QAAQ,SACRE,SAAU,SAAAC,GACR,IAAIC,EAMJ,OAJID,EAAME,OAAS,IACjBD,EAAQ,+CAGHA,CACR,KAEH,SAAC,KAAD,UAAmBb,EAAOV,eAE5B,SAAC,IAAD,CAAQkB,KAAK,SAASO,YAAY,OAAOC,MAAM,OAA/C,uBAnCL,UA8CZ,ECvFc,SAASC,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAACzC,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import { Notify } from 'notiflix';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Field } from 'formik';\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\nimport { useAuth } from 'components/hooks/useAuth';\nimport { logIn } from 'redux/auth/operations';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const { isLoading } = useAuth();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      logIn({\n        email: values.email,\n        password: values.password,\n      })\n    )\n      .unwrap()\n      .then(() => Notify.success('Ласкаво просимо!'))\n      .catch(() => Notify.failure('Неіснуючий email або пароль'));\n    resetForm();\n  };\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  return (\n    <>\n      {isLoading && <p>Logining...</p>}\n      <Flex bg=\"gray.100\" align=\"center\" justify=\"center\">\n        <Box bg=\"white\" p={8} rounded={4} w=\"50vh\">\n          <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n            {({ handleSubmit, errors, touched }) => (\n              <form onSubmit={handleSubmit}>\n                <VStack spacing={4} align=\"flex-start\">\n                  <FormControl>\n                    <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n                    <Field\n                      as={Input}\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      variant=\"filled\"\n                    />\n                  </FormControl>\n                  <FormControl\n                    isInvalid={!!errors.password && touched.password}\n                  >\n                    <FormLabel htmlFor=\"password\">Password</FormLabel>\n                    <Field\n                      as={Input}\n                      id=\"password\"\n                      name=\"password\"\n                      type=\"password\"\n                      variant=\"filled\"\n                      validate={value => {\n                        let error;\n\n                        if (value.length < 6) {\n                          error = 'Password must contain at least 6 characters';\n                        }\n\n                        return error;\n                      }}\n                    />\n                    <FormErrorMessage>{errors.password}</FormErrorMessage>\n                  </FormControl>\n                  <Button type=\"submit\" colorScheme=\"blue\" width=\"full\">\n                    Login\n                  </Button>\n                </VStack>\n              </form>\n            )}\n          </Formik>\n        </Box>\n      </Flex>\n    </>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function LoginPage() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["LoginForm","dispatch","useDispatch","isLoading","useAuth","bg","align","justify","p","rounded","w","initialValues","email","password","onSubmit","values","resetForm","logIn","unwrap","then","Notify","catch","handleSubmit","errors","touched","spacing","htmlFor","as","Input","id","name","type","variant","isInvalid","validate","value","error","length","colorScheme","width","LoginPage","Helmet"],"sourceRoot":""}